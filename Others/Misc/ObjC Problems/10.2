//
//  Solution.m
//  Practice
//
//  Created by Danno on 5/9/18.
//  Copyright Â© 2018 Danno. All rights reserved.
//

#import "Solution.h"

@interface NSMutableArray(Utils)
+ (NSMutableArray *)arrayWithDefault:(id)dObject count:(int)count;
@end

@implementation NSMutableArray(Utils)
+ (NSMutableArray *)arrayWithDefault:(id)dObject count:(int)count {
    NSMutableArray *array = [[NSMutableArray alloc] initWithCapacity:count];
    for (int i = 0; i < count; i++) {
        [array addObject:[dObject copy]];
    }
    return array;
}
@end

@interface NSString(Utils)
-(NSMutableArray *)convertToCharArray;
-(NSMutableDictionary *)convertToCharDictionary;
+(NSString *)convertToString:(NSArray *)array;
- (NSString *)sortAlphabetically;
@end

@implementation NSString(Utils)
- (NSString *)sortAlphabetically {
    NSMutableArray *array = [self convertToCharArray];
    [array sortUsingComparator:^NSComparisonResult(NSNumber   *obj1, NSNumber *obj2) {
        return [obj1 compare:obj2];
    }];
    return [NSString convertToString:array];
}
-(NSMutableArray *)convertToCharArray {
    NSMutableArray *characters = [[NSMutableArray alloc] init];
    for (int i = 0; i < [self length]; i++) {
        [characters addObject:@([self characterAtIndex:i])];
    }
    return characters;
}

-(NSMutableDictionary *)convertToCharDictionary {
    NSMutableDictionary *characters = [[NSMutableDictionary alloc] init];
    for (int i = 0; i < [self length]; i++) {
        NSNumber * numChar = @([self characterAtIndex:i]);
        if (characters[numChar] != nil) {
            characters[numChar] = @([characters[numChar] intValue] + 1);
        } else {
            characters[numChar] = @(1);
        }
    }
    return characters;
}

+(NSString *)convertToString:(NSArray *)array {
    NSMutableString *text = [[NSMutableString alloc] init];
    for (NSNumber *numChar in array) {
        [text appendFormat:@"%c", [numChar charValue]];
    }
    return [NSString stringWithString:text];
}
@end

@implementation Solution

-(NSMutableDictionary *)convertToAnagramsDictionary:(NSArray *)words {
    NSMutableDictionary *dict;
    for (NSString *word in words) {
        NSString * sortedWord = [word sortAlphabetically];
        if (dict[sortedWord] != nil) {
            dict[sortedWord] = [[NSMutableArray alloc] initWithObjects:word, nil];
        } else {
            [dict[sortedWord] addObject:word];
        }
    }
    return dict;
}

- (void)sortByAnagram:(NSMutableArray *)words {
    NSDictionary *dict = [self convertToAnagramsDictionary:words];
    int index = 0;
    for (NSString *sortedWord in dict) {
        for (NSString *word in dict[sortedWord]) {
            words[index] = word;
            index++;
        }
    }
}

- (void)run {
}

@end

//
//  Solution.m
//  Practice
//
//  Created by Danno on 5/9/18.
//  Copyright Â© 2018 Danno. All rights reserved.
//

#import "Solution.h"

@implementation Solution

- (void)fillZeroes:(NSMutableArray<NSMutableArray<NSNumber *> *> *)matrix {
    BOOL firstRowHasZeroes = false;
    BOOL firstColumnHasZeroes = false;
    for (NSNumber *number in matrix[0]) {
        if (number.intValue == 0) {
            firstRowHasZeroes = true;
            break;
        }
    }
    for (NSMutableArray<NSNumber *> *row in matrix) {
        if (row[0].intValue == 0) {
            firstColumnHasZeroes = true;
        }
    }
    
    for (int i = 1; i < [matrix count]; i++) {
        for (int j = 1; j < [matrix[i] count]; j++) {
            if (matrix[i][j] == 0) {
                matrix[i][0] = @0;
                matrix[0][j] = @0;
            }
        }
    }
    for (int i = 0; i < [matrix[0] count]; i++) {
        if (matrix[0][i] == 0) {
            for (int j = 0; j < matrix.count; j++) {
                matrix[j][i] = @0;
            }
        }
    }
    for (int i = 0; i < [matrix count]; i++) {
        if (matrix[i][0] == 0) {
            for (int j = 0; j < matrix[0].count; j++) {
                matrix[i][j] = @0;
            }
        }
    }
    if (firstRowHasZeroes) {
        for (int i = 0; i < [matrix[0] count]; i++) {
            matrix[0][i] = @0;
        }
    }
    if (firstColumnHasZeroes) {
        for (int i = 0; i < [matrix count]; i++) {
            matrix[i][0] = @0;
        }
    }
}

- (void)run {

}

@end
